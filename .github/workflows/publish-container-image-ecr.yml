---
name: Publish Container Image (ECR)

on:
  workflow_call:
    inputs:
      aws-region:
        description: The AWS region to use.
        default: ${{ vars.ECR_AWS_REGION || vars.AWS_REGION }}
        required: false
        type: string
      aws-role-to-assume:
        description: The AWS role to assume.
        default: ${{ vars.ECR_AWS_ROLE_TO_ASSUME || vars.AWS_ROLE_TO_ASSUME }}
        required: false
        type: string
      repository:
        description: The ECR repository to use (e.g. "lmbbox/example").
        required: true
        type: string
      build-args:
        description: The build-args to pass to docker/build-push-action.
        required: false
        type: string
      context:
        description: The context to pass to docker/build-push-action.
        required: true
        type: string
      file:
        description: The file to pass to docker/build-push-action.
        required: true
        type: string
      platforms:
        description: The platforms to pass to docker/build-push-action.
        required: true
        type: string

jobs:
  publish-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.aws-region }}
        role-to-assume: ${{ inputs.aws-role-to-assume }}

    - name: Login to Amazon ECR
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v2

    - name: Install cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract image metadata
      id: metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.ecr-login.outputs.registry }}/${{ inputs.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}

    - name: Build and push container image
      id: build-push
      uses: docker/build-push-action@v6
      with:
        build-args: ${{ inputs.build-args }}
        context: ${{ inputs.context }}
        file: ${{ inputs.file }}
        platforms: ${{ inputs.platforms }}
        push: true
        tags: ${{ steps.metadata.outputs.tags }}
        labels: ${{ steps.metadata.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Sign the resulting container image digest except on PRs.
    # This will only write to the public Rekor transparency log when the Docker
    # repository is public to avoid leaking data. If you would like to publish
    # transparency data even for private images, pass --force to cosign below.
    # https://github.com/sigstore/cosign
    - name: Sign the published container image
      if: ${{ github.event_name != 'pull_request' }}
      env:
        # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
        TAGS: ${{ steps.metadata.outputs.tags }}
        DIGEST: ${{ steps.build-push.outputs.digest }}
      # This step uses the identity token to provision an ephemeral certificate
      # against the sigstore community Fulcio instance.
      run: echo "${TAGS}" | xargs -I {} cosign sign --yes "{}@${DIGEST}"
